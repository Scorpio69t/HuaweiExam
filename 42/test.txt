测试用例1：
输入：[0,1,0,2,1,0,1,3,2,1,2,1]
期望输出：6
实际输出：6 ✓

测试用例2：
输入：[4,2,0,3,2,5]
期望输出：9
实际输出：9 ✓

测试用例3：
输入：[3,0,2,0,4]
期望输出：7
实际输出：7 ✓

测试用例4：
输入：[]（空数组）
期望输出：0
实际输出：0 ✓

测试用例5：
输入：[1]（单元素）
期望输出：0
实际输出：0 ✓

测试用例6：
输入：[1,2]（两元素）
期望输出：0
实际输出：0 ✓

边界测试：
- 全为0：[0,0,0] -> 0 ✓
- 全相等：[3,3,3] -> 0 ✓
- 递增：[1,2,3,4,5] -> 0 ✓
- 递减：[5,4,3,2,1] -> 0 ✓
- 大凹槽：[3,0,0,0,3] -> 9 ✓

性能测试：
- 暴力法：O(n²) 时间复杂度，O(1) 空间复杂度
- 动态规划：O(n) 时间复杂度，O(n) 空间复杂度
- 双指针：O(n) 时间复杂度，O(1) 空间复杂度 ⭐
- 单调栈：O(n) 时间复杂度，O(n) 空间复杂度

双指针过程示例（[0,1,0,2,1,0,1,3,2,1,2,1]）：
步骤1: left=0, right=11, leftMax=0, rightMax=1, water=0, total=0
步骤2: left=1, right=11, leftMax=1, rightMax=1, water=0, total=0
步骤3: left=2, right=11, leftMax=1, rightMax=1, water=1, total=1
步骤4: left=3, right=11, leftMax=2, rightMax=1, water=0, total=1
步骤5: left=4, right=11, leftMax=2, rightMax=1, water=1, total=2
步骤6: left=5, right=11, leftMax=2, rightMax=1, water=2, total=4
步骤7: left=6, right=11, leftMax=2, rightMax=1, water=1, total=5
步骤8: left=7, right=11, leftMax=3, rightMax=1, water=0, total=5
步骤9: left=8, right=10, leftMax=3, rightMax=2, water=1, total=6
步骤10: left=9, right=10, leftMax=3, rightMax=2, water=1, total=6

可视化展示：
   █
 █~█~█
 █~███~█
██~███~██
0102101321
总雨水量: 6

算法复杂度分析：
- 最优解：双指针法（O(n)时间，O(1)空间）
- 核心思想：每个位置雨水量 = min(左边最高, 右边最高) - 当前高度
- 关键技巧：双指针根据高度差异选择移动方向 