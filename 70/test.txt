# 70. 爬楼梯 - 测试用例

## 基础测试用例
输入: n = 2
输出: 2
说明: 有两种方法可以爬到楼顶：1+1 或 2

输入: n = 3
输出: 3
说明: 有三种方法：1+1+1, 1+2, 2+1

输入: n = 4
输出: 5
说明: 有五种方法：1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2

输入: n = 5
输出: 8
说明: 斐波那契数列第6项

## 边界测试用例
输入: n = 1
输出: 1
说明: 只有一种方法：爬1步

输入: n = 6
输出: 13
说明: 斐波那契数列第7项

## 斐波那契验证测试
输入: n = 10
输出: 89
说明: F(11) = 89

输入: n = 15
输出: 987
说明: F(16) = 987

输入: n = 20
输出: 10946
说明: F(21) = 10946

## 中等规模测试
输入: n = 25
输出: 121393
说明: F(26) = 121393

输入: n = 30
输出: 1346269
说明: F(31) = 1346269

## 大规模测试
输入: n = 40
输出: 165580141
说明: F(41) = 165580141

输入: n = 45
输出: 1836311903
说明: 题目约束的最大值，F(46) = 1836311903

## 算法验证点

### 递推关系验证
- f(n) = f(n-1) + f(n-2)
- 每个阶梯只能从前一阶或前两阶到达

### 边界条件验证
- f(1) = 1：只有一种方法
- f(2) = 2：两种方法(1+1 或 2)

### 斐波那契对应关系
- climbStairs(n) = fibonacci(n+1)
- 爬楼梯序列：1, 2, 3, 5, 8, 13, 21, 34...
- 斐波那契序列：1, 1, 2, 3, 5, 8, 13, 21...

### 空间优化正确性
- 状态转移只依赖前两个状态
- 可以用O(1)空间代替O(n)空间

### 数学公式精度验证
- 黄金比例公式在n较大时的精度
- 浮点运算的舍入误差

### 矩阵快速幂正确性
- 利用矩阵乘法加速计算
- 时间复杂度降为O(log n)

## 性能基准测试

### 时间复杂度验证
- 标准DP: O(n)
- 空间优化DP: O(n)
- 记忆化递归: O(n)
- 数学公式: O(1)
- 矩阵快速幂: O(log n)

### 空间复杂度验证
- 标准DP: O(n)
- 空间优化DP: O(1)
- 记忆化递归: O(n)
- 数学公式: O(1)
- 矩阵快速幂: O(1)

### 实际性能对比
- 小数据(n≤10): 所有方法性能相近
- 中等数据(n≤30): 数学公式最快
- 大数据(n≤45): 矩阵快速幂优势明显

## 数学性质验证

### 黄金比例收敛性
- lim(n→∞) F(n+1)/F(n) = φ ≈ 1.618033988749

### 奇偶性规律
- F(n)为偶数当且仅当n≡0(mod 3)

### 平方和性质
- F(1)² + F(2)² + ... + F(n)² = F(n) × F(n+1)

### 最大公约数性质
- gcd(F(m), F(n)) = F(gcd(m, n)) 